
import java.awt.Color;
import javax.swing.ButtonGroup;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
// okay na siguro kahit tangalin na ung ibang registration form maliban dito
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ideapad 520
 */
public class registrationForm extends javax.swing.JFrame {
    // 1 = chief
    // 2 = info
    // 3 = insti
    // 4 = asset
    // 5 = human
    // 6 = trading
    // 7 = admin
    // 8 = general
    // 9 = publics
    // 10 = finance
    // 11 = security
//comment
    public Integer formNumber = 0;
    
    private static String chief = "chief_table";
    private static String info = "info_table";
    private static String insti = "insti_table";   
    private static String asset = "asset_table";
    private static String human = "human_table";
    private static String trading = "trading_table";
    private static String admin = "admin_table";
    private static String general = "general_table";
    private static String publics = "publics_table";
    private static String finance = "finance_table";
    private static String security = "security_table";

    
    public String db="";
    /**
     * Creates new form registrationForm
     */
    public registrationForm() {
        initComponents();
        this.setLocationRelativeTo(this);
        this.setResizable(false);
        
        // button group for the radio button male and female
        ButtonGroup bg = new ButtonGroup(); 
        bg.add(jRadioButton_male);
        bg.add(jRadioButton_female);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_fname = new javax.swing.JTextField();
        jTextField_lname = new javax.swing.JTextField();
        jDateChooser_birthdate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton_male = new javax.swing.JRadioButton();
        jRadioButton_female = new javax.swing.JRadioButton();
        jTextField_address = new javax.swing.JTextField();
        jTextField_contact = new javax.swing.JTextField();
        jTextField_fatherfname = new javax.swing.JTextField();
        jTextField_fatherlname = new javax.swing.JTextField();
        jTextField_motherfname = new javax.swing.JTextField();
        jTextField_motherlname = new javax.swing.JTextField();
        jTextField_ssnumber = new javax.swing.JTextField();
        jTextField_tax = new javax.swing.JTextField();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jTextField_id = new javax.swing.JTextField();
        jButton_register = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel_exit = new javax.swing.JLabel();
        jLabel_minimize = new javax.swing.JLabel();
        jPasswordField_password = new javax.swing.JPasswordField();
        jPasswordField_confirmpword = new javax.swing.JPasswordField();
        jButton_show = new javax.swing.JButton();
        jButton_show1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_position = new javax.swing.JTextField();
        jTextField_unit = new javax.swing.JTextField();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        kGradientPanel1.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkEndColor(new java.awt.Color(19, 84, 122));
        kGradientPanel1.setkGradientFocus(-300);
        kGradientPanel1.setkStartColor(new java.awt.Color(128, 208, 199));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setText("Registration Form");

        jTextField_fname.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField_fname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_fname.setText("First Name");
        jTextField_fname.setToolTipText("");
        jTextField_fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_fnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_fnameFocusLost(evt);
            }
        });
        jTextField_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_fnameActionPerformed(evt);
            }
        });

        jTextField_lname.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField_lname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_lname.setText("Last Name");
        jTextField_lname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_lnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_lnameFocusLost(evt);
            }
        });
        jTextField_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_lnameActionPerformed(evt);
            }
        });

        jDateChooser_birthdate.setToolTipText("Drop Down Date");
        jDateChooser_birthdate.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jLabel1.setText("Birth Date");

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jLabel3.setText("Gender");

        jRadioButton_male.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jRadioButton_male.setText("Male");

        jRadioButton_female.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jRadioButton_female.setText("Female");

        jTextField_address.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_address.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_address.setText("Address");
        jTextField_address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_addressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_addressFocusLost(evt);
            }
        });

        jTextField_contact.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_contact.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_contact.setText("Contact Details");
        jTextField_contact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_contactFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_contactFocusLost(evt);
            }
        });
        jTextField_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_contactActionPerformed(evt);
            }
        });

        jTextField_fatherfname.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_fatherfname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_fatherfname.setText("Father's First Name");
        jTextField_fatherfname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_fatherfnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_fatherfnameFocusLost(evt);
            }
        });
        jTextField_fatherfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_fatherfnameActionPerformed(evt);
            }
        });

        jTextField_fatherlname.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_fatherlname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_fatherlname.setText("Father's Last Name");
        jTextField_fatherlname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_fatherlnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_fatherlnameFocusLost(evt);
            }
        });

        jTextField_motherfname.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_motherfname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_motherfname.setText("Mother's First Name");
        jTextField_motherfname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_motherfnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_motherfnameFocusLost(evt);
            }
        });

        jTextField_motherlname.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_motherlname.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_motherlname.setText("Mother's Last Name");
        jTextField_motherlname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_motherlnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_motherlnameFocusLost(evt);
            }
        });
        jTextField_motherlname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_motherlnameActionPerformed(evt);
            }
        });

        jTextField_ssnumber.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_ssnumber.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_ssnumber.setText("SS Number");
        jTextField_ssnumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_ssnumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_ssnumberFocusLost(evt);
            }
        });

        jTextField_tax.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_tax.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_tax.setText("Tax Identification Number");
        jTextField_tax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_taxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_taxFocusLost(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_fname, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jTextField_lname)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_contact, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_address, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(jRadioButton_male)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton_female))))
                            .addComponent(jTextField_fatherfname)
                            .addComponent(jTextField_fatherlname)
                            .addComponent(jTextField_motherfname)
                            .addComponent(jTextField_motherlname)
                            .addComponent(jTextField_ssnumber)
                            .addComponent(jTextField_tax))))
                .addGap(50, 50, 50))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_male)
                    .addComponent(jRadioButton_female)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_address, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_fatherfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_fatherlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_motherfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_motherlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_ssnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_tax, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel2.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkEndColor(new java.awt.Color(19, 84, 122));
        kGradientPanel2.setkGradientFocus(600);
        kGradientPanel2.setkStartColor(new java.awt.Color(128, 208, 199));
        kGradientPanel2.setMinimumSize(new java.awt.Dimension(0, 0));

        jTextField_id.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_id.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_id.setText("ID Number");
        jTextField_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_idFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_idFocusLost(evt);
            }
        });
        jTextField_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_idActionPerformed(evt);
            }
        });

        jButton_register.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jButton_register.setText("Register");
        jButton_register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_registerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_registerMouseExited(evt);
            }
        });
        jButton_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_registerActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 255, 153));
        jLabel4.setText(">>Already have an Account<<");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel_exit.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel_exit.setText("X");
        jLabel_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_exitMouseExited(evt);
            }
        });

        jLabel_minimize.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel_minimize.setText("▬");
        jLabel_minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_minimizeMouseExited(evt);
            }
        });

        jPasswordField_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPasswordField_passwordMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPasswordField_passwordMouseReleased(evt);
            }
        });
        jPasswordField_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_passwordActionPerformed(evt);
            }
        });

        jButton_show.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jButton_show.setText("SHOW");
        jButton_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_showMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_showMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_showMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_showMouseReleased(evt);
            }
        });

        jButton_show1.setBackground(new java.awt.Color(204, 204, 204));
        jButton_show1.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jButton_show1.setText("SHOW");
        jButton_show1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_show1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_show1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_show1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_show1MouseReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel6.setText("Confirm Password");

        jTextField_position.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_position.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_position.setText("Postion");
        jTextField_position.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_positionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_positionFocusLost(evt);
            }
        });

        jTextField_unit.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jTextField_unit.setForeground(new java.awt.Color(102, 102, 102));
        jTextField_unit.setText("Unit / Division");
        jTextField_unit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_unitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_unitFocusLost(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_minimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_exit))
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextField_id, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                        .addComponent(jPasswordField_confirmpword, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_show1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                        .addComponent(jPasswordField_password, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_show))
                                    .addComponent(jTextField_position)
                                    .addComponent(jTextField_unit)))
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jButton_register, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel4)))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_exit)
                    .addComponent(jLabel_minimize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField_position, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_id, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField_password, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_show, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_show1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jPasswordField_confirmpword))
                .addGap(18, 18, 18)
                .addComponent(jButton_register, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_fnameActionPerformed

    private void jTextField_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_lnameActionPerformed

    private void jTextField_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_contactActionPerformed

    private void jTextField_motherlnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_motherlnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_motherlnameActionPerformed

    private void jTextField_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_idActionPerformed

    private void jButton_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_registerActionPerformed
        //gathering data
        String birthdate="";
        
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String firstname = jTextField_fname.getText();
        String lastname  = jTextField_lname.getText();
        
        if(jDateChooser_birthdate.getDate() == null){
        birthdate = "";
        }
        else{
        birthdate = df.format( jDateChooser_birthdate.getDate());
        }
        
        String gender = "";
                if (jRadioButton_female.isSelected()){
                    gender = "Female";
                     
                }
                else if(jRadioButton_male.isSelected()){
                     gender = "Male";
                       
                }
                else{
                     gender = "";
                }
                
        String address = jTextField_address.getText();
        int number,number2;
        //number = Integer.parseInt("asldkfj");
        
        try{
        number = Integer.parseInt(jTextField_contact.getText());
        
        }catch(NumberFormatException e){
            
            JOptionPane.showMessageDialog(null, "contact should be a number", "Empty Field", 2);
            
        } 
         try{
        number2 = Integer.parseInt(jTextField_ssnumber.getText());
        
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "sss should be a number", "Empty Field", 2);
        } 
        
        String contact = jTextField_contact.getText();   //should be a number 
        String ssnumber = jTextField_ssnumber.getText(); //should be a number
        
        
        String fatherfname = jTextField_fatherfname.getText();
        String fatherlname = jTextField_fatherlname.getText();
        String motherfname = jTextField_motherfname.getText();
        String motherlname = jTextField_motherlname.getText();
       
        String tax = jTextField_tax.getText();
        String position = jTextField_position.getText();
        String unit = jTextField_unit.getText();
        String id = jTextField_id.getText();
        String password = String.valueOf(jPasswordField_password.getPassword());
        String confirm = String.valueOf(jPasswordField_confirmpword.getPassword());
        
        
        
        
        //verify fields
        if(verifyFields())
        {
            if(!checkidNumbers(id))
            {
            PreparedStatement ps;
            ResultSet rs;
            if(formNumber != 0){
             if(formNumber == 1){
            db = chief;
             }
             else if(formNumber == 2){
            db = info;
            }
             else if(formNumber == 3){
            db = insti;
            }
             else if(formNumber == 4){
            db = asset;
            }
             else if(formNumber == 5){
            db = human;
            }
             else if(formNumber == 6){
            db = trading;
            }
             else if(formNumber == 7){
            db = admin;
            }
             else if(formNumber == 8){
            db = general;
            }
             else if(formNumber == 9){
            db = publics;
            }
             else if(formNumber == 10){
            db = finance;
            }
             else if(formNumber == 11){
            db = security;
            }
           }
            
            
            String registrationUserQuery = "INSERT INTO "+db+"(`FirstName`, `LastName`, `BirthDate`, `Gender`, `Address`, `Contact`, `FatherFirstName`,`FatherLastName`,`MotherFirstName`, "
                    + "`MotherLastName`, `SssNumber`, `Tax`,`Position`, `UnitDivision`, `idNumbers`, `Password`, `ConfirmPassword`) "
                    + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            try{
                ps = Chief_db.getConnection().prepareStatement(registrationUserQuery);
                ps.setString(1, firstname);
                ps.setString(2, lastname);
                ps.setString(3, birthdate);
                ps.setString(4, gender);
                ps.setString(5, address);
                ps.setString(6, contact);
                ps.setString(7, fatherfname);
                ps.setString(8, fatherlname);
                ps.setString(9, motherfname);
                ps.setString(10, motherlname);
                ps.setString(11, ssnumber);
                ps.setString(12, tax);
                ps.setString(13, position);
                ps.setString(14, unit);
                ps.setString(15, id);
                ps.setString(16, password);
                ps.setString(17, confirm);
                
                if(ps.executeUpdate() != 0 )
                {
                    JOptionPane.showMessageDialog(null, "Account has been created");
                    dispose();
                    ChiefLoginForm clf = new ChiefLoginForm();
                    clf.setLocationRelativeTo(null);
                    clf.setVisible(true);
                }else
                {
                    JOptionPane.showMessageDialog(null, "Error: Please check the informations");
                }
            }   catch (SQLException ex) {
                    Logger.getLogger(registrationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        
    }//GEN-LAST:event_jButton_registerActionPerformed

    private void jTextField_fnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fnameFocusGained
        // clear the textfield if its equal to "First Name"
        if(jTextField_fname.getText().trim().equals("First Name"));
        {
            jTextField_fname.setText("");
            jTextField_fname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_fnameFocusGained

    private void jTextField_fnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "First Name" text in the textfield
        //on focus  lost event

        if(jTextField_fname.getText().trim().equals("") ||
            jTextField_fname.getText().trim().equals("First Name"))
        {
            jTextField_fname.setText("First Name");
            jTextField_fname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_fnameFocusLost

    private void jTextField_lnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_lnameFocusGained
        // clear the textfield if its equal to "Last Name"
        if(jTextField_lname.getText().trim().equals("Last Name"));
        {
            jTextField_lname.setText("");
            jTextField_lname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_lnameFocusGained

    private void jTextField_lnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_lnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Last Name" text in the textfield
        //on focus  lost event

        if(jTextField_lname.getText().trim().equals("") ||
            jTextField_lname.getText().trim().equals("Last Name"))
        {
            jTextField_lname.setText("Last Name");
            jTextField_lname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_lnameFocusLost

    private void jTextField_addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_addressFocusGained
        // clear the textfield if its equal to "Address"
        if(jTextField_address.getText().trim().equals("Address"));
        {
            jTextField_address.setText("");
            jTextField_address.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_addressFocusGained

    private void jTextField_addressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_addressFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Address" text in the textfield
        //on focus  lost event

        if(jTextField_address.getText().trim().equals("") ||
            jTextField_address.getText().trim().equals("Address"))
        {
            jTextField_address.setText("Address");
            jTextField_address.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_addressFocusLost

    private void jTextField_contactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_contactFocusGained
        // clear the textfield if its equal to "Contact"
        if(jTextField_contact.getText().trim().equals("Contact"));
        {
            jTextField_contact.setText("");
            jTextField_contact.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_contactFocusGained

    private void jTextField_contactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_contactFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Contact" text in the textfield
        //on focus  lost event

        if(jTextField_contact.getText().trim().equals("") ||
            jTextField_contact.getText().trim().equals("Contact"))
        {
            jTextField_contact.setText("Contact");
            jTextField_contact.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_contactFocusLost

    private void jTextField_fatherfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_fatherfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_fatherfnameActionPerformed

    private void jTextField_fatherfnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fatherfnameFocusGained
        // clear the textfield if its equal to "Father's First Name"
        if(jTextField_fatherfname.getText().trim().equals("Father's First Name"));
        {
            jTextField_fatherfname.setText("");
            jTextField_fatherfname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_fatherfnameFocusGained

    private void jTextField_fatherfnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fatherfnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Father's First Name" text in the textfield
        //on focus  lost event

        if(jTextField_fatherfname.getText().trim().equals("") ||
            jTextField_fatherfname.getText().trim().equals("Father's First Name"))
        {
            jTextField_fatherfname.setText("Father's First Name");
            jTextField_fatherfname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_fatherfnameFocusLost

    private void jTextField_fatherlnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fatherlnameFocusGained
        // clear the textfield if its equal to "Father's Last Name"
        if(jTextField_fatherlname.getText().trim().equals("Father's Last Name"));
        {
            jTextField_fatherlname.setText("");
            jTextField_fatherlname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_fatherlnameFocusGained

    private void jTextField_fatherlnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_fatherlnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Father's Last Name" text in the textfield
        //on focus  lost event

        if(jTextField_fatherlname.getText().trim().equals("") ||
            jTextField_fatherlname.getText().trim().equals("Father's Last Name"))
        {
            jTextField_fatherlname.setText("Father's Last Name");
            jTextField_fatherlname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_fatherlnameFocusLost

    private void jTextField_motherfnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motherfnameFocusGained
        // clear the textfield if its equal to "Father's First Name"
        if(jTextField_motherfname.getText().trim().equals("Mother First Name"));
        {
            jTextField_motherfname.setText("");
            jTextField_motherfname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_motherfnameFocusGained

    private void jTextField_motherfnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motherfnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Mother First Name" text in the textfield
        //on focus  lost event

        if(jTextField_motherfname.getText().trim().equals("") ||
            jTextField_motherfname.getText().trim().equals("Mother First Name"))
        {
            jTextField_motherfname.setText("Mother First Name");
            jTextField_motherfname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_motherfnameFocusLost

    private void jTextField_motherlnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motherlnameFocusGained
        // clear the textfield if its equal to "Mother Last Name"
        if(jTextField_motherlname.getText().trim().equals("Mother Last Name"));
        {
            jTextField_motherlname.setText("");
            jTextField_motherlname.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_motherlnameFocusGained

    private void jTextField_motherlnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motherlnameFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Mother Last Name" text in the textfield
        //on focus  lost event

        if(jTextField_motherlname.getText().trim().equals("") ||
            jTextField_motherlname.getText().trim().equals("Mother Last Name"))
        {
            jTextField_motherlname.setText("Mother Last Name");
            jTextField_motherlname.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_motherlnameFocusLost

    private void jTextField_ssnumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_ssnumberFocusGained
        // clear the textfield if its equal to "SS Number"
        if(jTextField_motherlname.getText().trim().equals("SS Number"));
        {
            jTextField_ssnumber.setText("");
            jTextField_ssnumber.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_ssnumberFocusGained

    private void jTextField_ssnumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_ssnumberFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "SS Number" text in the textfield
        //on focus  lost event

        if(jTextField_ssnumber.getText().trim().equals("") ||
            jTextField_ssnumber.getText().trim().equals("SS Number"))
        {
            jTextField_ssnumber.setText("SS Number");
            jTextField_ssnumber.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_ssnumberFocusLost

    private void jTextField_taxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_taxFocusGained
        // clear the textfield if its equal to "Tax Identification Number"
        if(jTextField_tax.getText().trim().equals("Tax Identification Number"));
        {
            jTextField_tax.setText("");
            jTextField_tax.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_taxFocusGained

    private void jTextField_taxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_taxFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Tax Identification Number" text in the textfield
        //on focus  lost event

        if(jTextField_tax.getText().trim().equals("") ||
            jTextField_tax.getText().trim().equals("Tax Identification Number"))
        {
            jTextField_tax.setText("Tax Identification Number");
            jTextField_tax.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_taxFocusLost

    private void jTextField_idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_idFocusGained
        // clear the textfield if its equal to "ID Number"
        if(jTextField_id.getText().trim().equals("ID Number"));
        {
            jTextField_id.setText("");
            jTextField_id.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_idFocusGained

    private void jTextField_idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_idFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "ID Number" text in the textfield
        //on focus  lost event

        if(jTextField_id.getText().trim().equals("") ||
            jTextField_id.getText().trim().equals("ID Number"))
        {
            jTextField_id.setText("ID Number");
            jTextField_id.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_idFocusLost

    private void jLabel_exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_exitMouseEntered
        jLabel_exit.setForeground(Color.white);
    }//GEN-LAST:event_jLabel_exitMouseEntered

    private void jLabel_exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_exitMouseExited
        jLabel_exit.setForeground(Color.black);
    }//GEN-LAST:event_jLabel_exitMouseExited

    private void jLabel_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel_exitMouseClicked

    private void jLabel_minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeMouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_jLabel_minimizeMouseClicked

    private void jLabel_minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeMouseEntered
        jLabel_minimize.setForeground(Color.white);
    }//GEN-LAST:event_jLabel_minimizeMouseEntered

    private void jLabel_minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_minimizeMouseExited
       jLabel_minimize.setForeground(Color.black);
    }//GEN-LAST:event_jLabel_minimizeMouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        if(formNumber != 0){
        if(formNumber == 1){
        ChiefLoginForm lf = new ChiefLoginForm();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }else if(formNumber == 2){
        
         Info_and_comm_Form lf = new Info_and_comm_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 3){
        
        InstiDevForm lf = new InstiDevForm();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 4){
        
        Asset_and_amenities_Form lf = new Asset_and_amenities_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 5){
        
        Human_resources_Form lf = new Human_resources_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 6){
        
        Trading_operation_Form lf = new Trading_operation_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 7){
        
        Administrative_division_Form lf = new Administrative_division_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 8){
        
        general_service_Form lf = new general_service_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 9){
        
        Public_relation_Form lf = new Public_relation_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 10){
        
        Finance_division_Form lf = new Finance_division_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
        else if(formNumber == 11){
        
        Security_Form lf = new Security_Form();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        }
       }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jPasswordField_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField_passwordActionPerformed

    private void jPasswordField_passwordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField_passwordMousePressed
        //
    }//GEN-LAST:event_jPasswordField_passwordMousePressed

    private void jPasswordField_passwordMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField_passwordMouseReleased
         //
    }//GEN-LAST:event_jPasswordField_passwordMouseReleased

    private void jButton_show1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_show1MousePressed
        if(jButton_show1.isDisplayable()){
            jPasswordField_confirmpword.setEchoChar((char)0);
        }else{
            jPasswordField_confirmpword.setEchoChar('*');
        }
    }//GEN-LAST:event_jButton_show1MousePressed

    private void jButton_show1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_show1MouseReleased
        if(jButton_show1.isDisplayable()){
            jPasswordField_confirmpword.setEchoChar('*');
        }else{
            jPasswordField_confirmpword.setEchoChar((char)0);
        }
    }//GEN-LAST:event_jButton_show1MouseReleased

    private void jButton_showMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_showMousePressed
        if(jButton_show.isDisplayable()){
            jPasswordField_password.setEchoChar((char)0);
        }else{
            jPasswordField_password.setEchoChar('*');
        }
    }//GEN-LAST:event_jButton_showMousePressed

    private void jButton_showMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_showMouseReleased
        if(jButton_show.isDisplayable()){
            jPasswordField_password.setEchoChar('*');
        }else{
            jPasswordField_password.setEchoChar((char)0);
        }
    }//GEN-LAST:event_jButton_showMouseReleased

    private void jButton_show1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_show1MouseEntered
        jButton_show1.setBackground(Color.darkGray);
    }//GEN-LAST:event_jButton_show1MouseEntered

    private void jButton_show1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_show1MouseExited
        jButton_show1.setBackground(Color.white);
    }//GEN-LAST:event_jButton_show1MouseExited

    private void jButton_showMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_showMouseEntered
        jButton_show.setBackground(Color.darkGray);
    }//GEN-LAST:event_jButton_showMouseEntered

    private void jButton_showMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_showMouseExited
        jButton_show.setBackground(Color.white);
    }//GEN-LAST:event_jButton_showMouseExited

    private void jButton_registerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_registerMouseEntered
        jButton_register.setBackground(Color.darkGray);
    }//GEN-LAST:event_jButton_registerMouseEntered

    private void jButton_registerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_registerMouseExited
        jButton_register.setBackground(Color.white);
    }//GEN-LAST:event_jButton_registerMouseExited

    private void jTextField_positionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_positionFocusGained
        // clear the textfield if its equal to "Position"
        if(jTextField_position.getText().trim().equals("Position"));
        {
            jTextField_position.setText("");
            jTextField_position.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_positionFocusGained

    private void jTextField_positionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_positionFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Position" text in the textfield
        //on focus  lost event

        if(jTextField_position.getText().trim().equals("") ||
            jTextField_position.getText().trim().equals("Position"))
        {
            jTextField_position.setText("Position");
            jTextField_position.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_positionFocusLost

    private void jTextField_unitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_unitFocusGained
         // clear the textfield if its equal to "Unit / Division"
        if(jTextField_unit.getText().trim().equals("Unit / Division"));
        {
            jTextField_unit.setText("");
            jTextField_unit.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_unitFocusGained

    private void jTextField_unitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_unitFocusLost
        //if the text field is equal to Optional or empty
        //we will set the "Unit / Division" text in the textfield
        //on focus  lost event

        if(jTextField_unit.getText().trim().equals("") ||
            jTextField_unit.getText().trim().equals("Unit / Division"))
        {
            jTextField_unit.setText("Unit / Division");
            jTextField_unit.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField_unitFocusLost

    //function to verify empty fields
    public boolean verifyFields(){
    
    String birthdate = "";    
    
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    String firstname = jTextField_fname.getText();
    String lastname = jTextField_lname.getText();
    
    
    if(jDateChooser_birthdate.getDate() == null){
        birthdate = "";
        }
        else{
        birthdate = df.format( jDateChooser_birthdate.getDate());
        }
     
    String gender = "";
                if (jRadioButton_female.isSelected()){
                    gender = "Female";
                     
                }
                else if(jRadioButton_male.isSelected()){
                     gender = "Male";
                       
                }
                else{
                     gender = "";
                }
    String address = jTextField_address.getText();
    String contact = jTextField_contact.getText();
    String fatherfname = jTextField_fatherfname.getText();
    String fatherlname = jTextField_fatherlname.getText();
    String motherfname = jTextField_motherfname.getText();
    String motherlname = jTextField_motherlname.getText();
    String ssnumber = jTextField_ssnumber.getText();
    String tax = jTextField_tax.getText();
    String position = jTextField_position.getText();
    String unit = jTextField_unit.getText();
    String idnumber = jTextField_id.getText();
    String password = String.valueOf(jPasswordField_password.getPassword());
    String confirmpword = String.valueOf(jPasswordField_confirmpword.getPassword());
    
//    if(firstname == "First Name" || lastname == "Last Name" ||  birthdate == "2000-01-01" || gender == "Male" || address == "Address" || contact == "Contact Details" || fatherfname == "Father's First Name" || fatherlname == "Father's Last Name" || motherfname == "Mother's First Name" || motherlname == "Mother's Last Name" || ssnumber == "SS Number" || tax == "Tax Identification Number" || position == "Postion" || unit == "Unit / Division" || idnumber == "ID Number" || password == "" || confirmpword == "")
//    {
//        firstname ="";lastname =""; birthdate ="";gender ="";address ="";contact ="";fatherfname ="";fatherlname ="";motherfname ="";motherlname ="";ssnumber ="";tax ="";position ="";unit ="";idnumber ="";password ="";confirmpword ="";
//    }else{}
    
     

    // check empty fields
    if(firstname.trim().equals("") || lastname.trim().equals("") || birthdate.trim().equals("") || gender.trim().equals("") || address.trim().equals("") || contact.trim().equals("") || fatherfname.trim().equals("")
            || fatherlname.trim().equals("") || motherfname.trim().equals("") || motherlname.trim().equals("") || ssnumber.trim().equals("") || tax.trim().equals("")|| position.trim().equals("") || unit.trim().equals("") 
            || idnumber.trim().equals("") || password.trim().equals("") || confirmpword.trim().equals(""))
    {
        JOptionPane.showMessageDialog(null, "One or more fields are empty", "Empty Field", 2);
        return false;
    }
    
    //check if the password match
    else if(!password.equals(confirmpword))
    {
        JOptionPane.showMessageDialog(null, "Password doesn't match", "Confirm Password", 2);
        return false;
    } 
    // if everything is okay
    else
    {
        return true;
    }
    }
     //create a function to check if the username already exist
    public boolean checkidNumbers(String id){
        PreparedStatement ps;
        ResultSet rs;
        boolean idnumber_exist = false;
        if(formNumber != 0){
         if(formNumber == 1){
            db = chief;
             }
             else if(formNumber == 2){
            db = info;
            }
             else if(formNumber == 3){
            db = insti;
            }
             else if(formNumber == 4){
            db = asset;
            }
             else if(formNumber == 5){
            db = human;
            }
             else if(formNumber == 6){
            db = trading;
            }
             else if(formNumber == 7){
            db = admin;
            }
             else if(formNumber == 8){
            db = general;
            }
             else if(formNumber == 9){
            db = publics;
            }
             else if(formNumber == 10){
            db = finance;
            }
             else if(formNumber == 11){
            db = security;
            }
        }
        String query = "SELECT * FROM "+db+" WHERE `idNumbers` = ?";
        
       
        try {
            ps = Chief_db.getConnection().prepareStatement(query);
            ps.setString(1, id);
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                idnumber_exist = true;
                JOptionPane.showMessageDialog(null, "Username already taken", "Username Failed", 2);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(registrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return idnumber_exist;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_register;
    private javax.swing.JButton jButton_show;
    private javax.swing.JButton jButton_show1;
    private com.toedter.calendar.JDateChooser jDateChooser_birthdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_exit;
    private javax.swing.JLabel jLabel_minimize;
    private javax.swing.JPasswordField jPasswordField_confirmpword;
    private javax.swing.JPasswordField jPasswordField_password;
    private javax.swing.JRadioButton jRadioButton_female;
    private javax.swing.JRadioButton jRadioButton_male;
    private javax.swing.JTextField jTextField_address;
    private javax.swing.JTextField jTextField_contact;
    private javax.swing.JTextField jTextField_fatherfname;
    private javax.swing.JTextField jTextField_fatherlname;
    private javax.swing.JTextField jTextField_fname;
    private javax.swing.JTextField jTextField_id;
    private javax.swing.JTextField jTextField_lname;
    private javax.swing.JTextField jTextField_motherfname;
    private javax.swing.JTextField jTextField_motherlname;
    private javax.swing.JTextField jTextField_position;
    private javax.swing.JTextField jTextField_ssnumber;
    private javax.swing.JTextField jTextField_tax;
    private javax.swing.JTextField jTextField_unit;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    // End of variables declaration//GEN-END:variables
}
